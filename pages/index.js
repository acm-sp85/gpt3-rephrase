import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useState, useEffect } from 'react';

export default function Home() {
  const [target, setTarget] = useState('');
  const [entries, setEntries] = useState([]);
  const SECRET_KEY = process.env.NEXT_PUBLIC_SECRET_KEY;

  useEffect(() => {
    const data = window.localStorage.getItem('LIST_OF_ENTRIES');
    console.log(data);
    if (data !== null) setEntries(JSON.parse(data));
  }, []);
  useEffect(() => {
    window.localStorage.setItem('LIST_OF_ENTRIES', JSON.stringify(entries));
  }, [entries]);

  const rephrase = async (e) => {
    e.preventDefault();
    setTarget('');
    const data = {
      prompt: target,
      temperature: 0.5,
      max_tokens: 64,
      top_p: 1.0,
      frequency_penalty: 0.0,
      presence_penalty: 0.0,
    };

    const res = await fetch(
      'https://api.openai.com/v1/engines/text-curie-001/completions',
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${SECRET_KEY}`,
        },
        body: JSON.stringify(data),
      }
    );
    const response = await res.json();

    setEntries([
      ...entries,
      { initialEntry: data.prompt, reply: response.choices[0].text },
    ]);
  };

  const clearResults = () => {
    localStorage.clear();
    setEntries([]);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>GPT-3 Contell</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>GPT-3 Contell</h1>

        <p className={styles.description}>Talk to an AI</p>
        <div>
          <form>
            <input
              type="text"
              name="target"
              id="target"
              value={target}
              onChange={(e) => setTarget(e.target.value)}
            />
            <button type="submit" onClick={rephrase}>
              Say it!
            </button>
          </form>
          {entries.length >= 1 ? (
            <div style={{ textAlign: 'center', marginTop: '15px' }}>
              <button onClick={clearResults}>Clear Results</button>
            </div>
          ) : (
            <></>
          )}
        </div>
        <ul className={styles.grid}>
          {entries.map((entry, index) => {
            return (
              <li className={styles.card} key={index}>
                <h3>{entry.initialEntry}</h3>
                <p>{entry.reply}</p>
              </li>
            );
          })}
        </ul>
      </main>

      <footer className={styles.footer}>
        <a
          href="http://alexcontell.dev/"
          target="_blank"
          rel="noopener noreferrer"
        >
          by
          <h3>Alex Contell</h3>
        </a>
      </footer>
    </div>
  );
}
